// Author: cvet
#include "_macros.fos"
#include "_vars.fos"
#include "_animation.fos"
#include "_teams.fos"
#include "_itempid.fos"

#define TIME_TO_DEATH (REAL_MINUTE(Random(110,130))) // Время самоубийства турели

// Размеры штрафов на отработку.
// Не забудьте поправить и в диалоге hell_senior_hub, если будете менять.

#define FINE_CHILDKILLER   (20000)
#define FINE_BAD_KARMA     (2000)
#define FINE_BAD_KARMA2    (4000)
#define FINE_BAD_KARMA3    (8000)
#define FINE_HUBOLOGISTS   (8000)
#define FINE_NCR           (12000)
#define FINE_VC            (7000)
#define FINE_REDDING       (8500)
#define FINE_BROKEN        (7000)
#define FINE_GECKO         (5000)
#define FINE_KLAMATH       (4000)
#define FINE_MODOC         (5500)
#define FINE_DEN           (6000)
#define FINE_RENO          (12000)
#define FINE_SF            (12000)

import bool AddAttackPlane(Critter& npc, uint priority, Critter& target) from "npc_planes";
import bool AddMiscPlane(Critter& npc, uint priority, uint waitSecond, string@ funcName) from "npc_planes";
import void DropPoison(Critter& cr) from "poison";
import void DropRadiation(Critter& cr) from "radiation";
import void dropAllItem(Critter& cr) from "replication";

uint[] TurretIds;
const uint16[] HellAllMapsPid={MAP_hell_main,MAP_hell_level1,MAP_hell_level2,MAP_hell_level3,MAP_hell_level4,MAP_hell_corridor,MAP_hell_mines,MAP_hell_forest,MAP_hell_pipboys,MAP_hell_burrow};

void _TurretInit(Critter& turret, bool firstTime)
{
	turret.StatBase[ST_TEAM_ID]=TEAM_ReplicationTurret;
	turret.StatBase[ST_REPLICATION_TIME]=1;
	turret.StatBase[ST_PERCEPTION]=10;
	turret.StatBase[ST_ACTION_POINTS]=100;
	turret.StatBase[ST_MAX_LIFE]=1000;
	turret.StatBase[ST_CURRENT_HP]=1500;
	turret.StatBase[ST_BONUS_LOOK]=700;
	turret.StatBase[ST_STRENGTH]=10;
	turret.StatBase[ST_ENDURANCE]=10;
	turret.SkillBase[SK_BIG_GUNS]=300;
	turret.ModeBase[MODE_NO_ENEMY_STACK]=1;
	turret.ModeBase[MODE_UNLIMITED_AMMO]=1;
	turret.StatBase[ST_CRITICAL_RESISTANCE]=95;

	turret.SetEvent(CRITTER_EVENT_SMTH_USE_SKILL,"_TurretSmthUseSkill");
	turret.SetEvent(CRITTER_EVENT_SMTH_ATTACK,"_TurretSmthAttack");

	if(turret.GetTimeEvents(CTE_AUTOKILL,null,null,null)==0)
		turret.AddTimeEvent("cte_KillTurret",TIME_TO_DEATH,CTE_AUTOKILL);

	if(turret.CountItem(PID_GUN_TURRET_WEAPON)==0)
		turret.AddItem(PID_GUN_TURRET_WEAPON,1);

	TurretIds.insertLast(turret.Id);
}

uint cte_KillTurret(Critter& cr, int identifier, uint& rate)
{
	if (!cr.IsDead()) cr.ToDead(ANIM2_DEAD_FRONT,null);
	return TIME_TO_DEATH;
}

void t_Electro(Critter& cr, Scenery& trigger, bool entered, uint8 dir)
{
	if(not entered || not cr.IsPlayer()) return;

	Map@ map=cr.GetMap();
	if(not valid(map)) return;

	bool attack=false;

	// В отстойник. Убиваем.
	if(dir==1 || dir==2 || dir==3) attack=true;
	// Из отстойника. Проверяем баланс репликации, если отрицательный, то убиваем.
	else if(cr.Stat[ST_REPLICATION_MONEY]<0) attack=true;

	if(attack)
	{
		for(uint i=0, iMax=TurretIds.length(); i<iMax; i++)
		{
			Critter@ turret=GetCritter(TurretIds[i]);
			if(valid(turret) && not turret.IsDead()) AddAttackPlane(turret,0,cr);
		}
	}
}

void _TurretSmthUseSkill(Critter& turret, Critter& hacker, int skill, Critter@ onCritter, Item@ onItem, Scenery@ onScenery)
{
	if(skill==SK_SCIENCE && valid(onCritter) && onCritter.Id==turret.Id)
	{
		GameVar@ hackCount=GetLocalVar(LVAR_repl_hell_turret_hack,hacker.Id);
		int sk=hacker.Skill[SK_SCIENCE]-hackCount*10;
		sk=CLAMP(sk,6,95);
		if(sk>=Random(1,100))
		{
			turret.DropPlanes();
			AddMiscPlane(turret,100,__FullSecond+REAL_SECOND(10),null); // Wait 10 seconds
			turret.Say(SAY_NORM_ON_HEAD,"!@#$%^&*");
			hackCount+=1;
			if(hackCount>=hackCount.GetMax()) hackCount=hackCount.GetMin();
		}
		else
		{
			AddAttackPlane(turret,0,hacker);
		}
	}
}

void _TurretSmthAttack(Critter& turret, Critter& attacker, Critter& target)
{
	AddAttackPlane(turret,0,attacker);
}

bool IsHellMap(int mapPid)
{
        for (uint i = 0; i<HellAllMapsPid.length(); i++)
        {
                if (HellAllMapsPid[i]==mapPid) return true;
        }
        return false;
}

void hellReplicateCritter(Critter& cr)
{	
	Map@ dieMap=cr.GetMap();
	bool dieMapIsHell = ( valid( dieMap ) && IsHellMap( dieMap.GetProtoId() ) );
	if( not dieMapIsHell ) cr.StatBase[ ST_REPLICATION_MONEY ] -= cr.Stat[ ST_REPLICATION_COST ];
	
	dropAllItem(cr);
	cr.DamageBase[DAMAGE_EYE]=0;
	cr.DamageBase[DAMAGE_RIGHT_ARM]=0;
	cr.DamageBase[DAMAGE_LEFT_ARM]=0;
	cr.DamageBase[DAMAGE_RIGHT_LEG]=0;
	cr.DamageBase[DAMAGE_LEFT_LEG]=0;
	cr.ToLife();
	cr.StatBase[ST_CURRENT_HP]=cr.Stat[ST_MAX_LIFE];
	cr.StatBase[ST_CURRENT_AP]=cr.Stat[ST_ACTION_POINTS]*100;
	DropPoison(cr);
	DropRadiation(cr);
	cr.DropTimers();

	for(uint i=TIMEOUT_BEGIN;i<=TIMEOUT_END;i++) if(i!=TO_KARMA_VOTING) cr.TimeoutBase[i]=0;
	
	Map@ map=GetMapByPid(MAP_hell_level1, 0);
	cr.TransitToMap(map.Id,242);
}

// Я подозреваю, что ниже идёт совершенно ебанутый код, но я по-другому не умею.
// Если кто-то захочет переписать - я не против.
// Но учтите, что там все значения для всех переменных разные (и на это есть причина).
// Дагнир.

// Отсыл в Ад. Проверяется, какие очистки игрок заказал в диалоге
// и отнимается за это соответствующая сумма.
void r_SendToHell(Critter& player, Critter@ npc)
{
	// Возвращаем деньги, которые списались за репликацию на поверхности Ада.
	player.StatBase[ST_REPLICATION_MONEY]+=(player.StatBase[ST_LEVEL])*100;
	// На случай, если у персонажа положительный счёт.
	if (player.StatBase[ST_REPLICATION_MONEY]>0) player.StatBase[ST_REPLICATION_MONEY]=-1;
	
	// Снимаем деньги за каждый тип отработки по очереди.
	
	// Детоубивец
	GameVar @ cleanChildkiller = GetLocalVar(LVAR_hell_atonement_childkiller, player.Id);
				//if(!valid(cleanChildkiller)) continue;
				if(cleanChildkiller.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_CHILDKILLER;
				}
				
	// Плохая карма
	GameVar @ cleanKarma = GetLocalVar(LVAR_hell_atonement_bad_karma , player.Id);
				//if(!valid(cleanKarma)) continue;
				if(cleanKarma.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_BAD_KARMA;
				}

	// Карма похуже
	GameVar @ cleanKarma2 = GetLocalVar(LVAR_hell_atonement_bad_karma2, player.Id);
				//if(!valid(cleanKarma2)) continue;
				if(cleanKarma2.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_BAD_KARMA2;
				}

	// Карма - говно
	GameVar @ cleanKarma3 = GetLocalVar(LVAR_hell_atonement_bad_karma3, player.Id);
				//if(!valid(cleanKarma3)) continue;
				if(cleanKarma3.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_BAD_KARMA3;
				}

	// Энкаунтерная карма - хабологи
	GameVar @ cleanHubs = GetLocalVar(LVAR_hell_atonement_enc_hubologists , player.Id);
				//if(!valid(cleanHubs)) continue;
				if(cleanHubs.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_HUBOLOGISTS;
				}

	// Энкаунтерная карма - НКР
	GameVar @ cleanNCR = GetLocalVar(LVAR_hell_atonement_enc_ncr , player.Id);
				//if(!valid(cleanNCR)) continue;
				if(cleanNCR.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_NCR;
				}
	
	// Энкаунтерная карма - ГУ
	GameVar @ cleanVC = GetLocalVar(LVAR_hell_atonement_enc_vcity , player.Id);
				//if(!valid(cleanVC)) continue;
				if(cleanVC.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_VC;
				}

	// Энкаунтерная карма - Реддинг
	GameVar @ cleanRedding = GetLocalVar(LVAR_hell_atonement_enc_redding , player.Id);
				//if(!valid(cleanRedding)) continue;
				if(cleanRedding.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_REDDING;
				}

	// Энкаунтерная карма - БХ
	GameVar @ cleanBHills = GetLocalVar(LVAR_hell_atonement_enc_bh , player.Id);
				//if(!valid(cleanBHills)) continue;
				if(cleanBHills.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_BROKEN;
				}

	// Энкаунтерная карма - Гекко
	GameVar @ cleanGecko = GetLocalVar(LVAR_hell_atonement_enc_gecko , player.Id);
				//if(!valid(cleanGecko)) continue;
				if(cleanGecko.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_GECKO;
				}
				
	//Тут по-порядку должен идти Арройо, но их карму не очищают. Имейте ввиду.

	// Энкаунтерная карма - Кламат
	GameVar @ cleanKlamath = GetLocalVar(LVAR_hell_atonement_enc_klamath , player.Id);
				//if(!valid(cleanKlamath)) continue;
				if(cleanKlamath.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_KLAMATH;
				}

	// Энкаунтерная карма - Модок.
	GameVar @ cleanModoc = GetLocalVar(LVAR_hell_atonement_enc_modoc , player.Id);
				//if(!valid(cleanModoc)) continue;
				if(cleanModoc.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_MODOC;
				}

	// Энкаунтерная карма - Дэн
	GameVar @ cleanDen = GetLocalVar(LVAR_hell_atonement_enc_den , player.Id);
				//if(!valid(cleanDen)) continue;
				if(cleanDen.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_DEN;
				}

	// Энкаунтерная карма - Рено
	GameVar @ cleanReno = GetLocalVar(LVAR_hell_atonement_enc_reno , player.Id);
				//if(!valid(cleanReno)) continue;
				if(cleanReno.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_RENO;
				}

	// Энкаунтерная карма - СФ
	GameVar @ cleanSF = GetLocalVar(LVAR_hell_atonement_enc_sf_caravans , player.Id);
				//if(!valid(cleanSF)) continue;
				if(cleanSF.GetValue()==1)
				{
					player.StatBase[ST_REPLICATION_MONEY]-=FINE_SF;
				}

}

// Очистка по выходу.
// Энкаунтерную карму специально не выбивает в ноль - 
// Игрока начнут снова атаковать уже после выноса одного каравана.
void r_ClearSins(Critter& player, Critter@ npc)
{
	// Детоубивец
	GameVar @ cleanChildkiller = GetLocalVar(LVAR_hell_atonement_childkiller, player.Id);
				//if(!valid(cleanChildkiller)) continue;
				if(cleanChildkiller.GetValue()==1)
				{
					player.KarmaBase[KARMA_CHILDKILLER]=0;
				}
				
	// Плохая карма
	GameVar @ cleanKarma = GetLocalVar(LVAR_hell_atonement_bad_karma , player.Id);
				//if(!valid(cleanKarma)) continue;
				if(cleanKarma.GetValue()==1)
				{
					player.StatBase[ST_KARMA]+=100;
					if(player.StatBase[ST_KARMA]>0) player.StatBase[ST_KARMA]=0;
				}

	// Карма похуже
	GameVar @ cleanKarma2 = GetLocalVar(LVAR_hell_atonement_bad_karma2, player.Id);
				//if(!valid(cleanKarma2)) continue;
				if(cleanKarma2.GetValue()==1)
				{
					player.StatBase[ST_KARMA]+=200;
				}

	// Карма - говно
	GameVar @ cleanKarma3 = GetLocalVar(LVAR_hell_atonement_bad_karma3, player.Id);
				//if(!valid(cleanKarma3)) continue;
				if(cleanKarma3.GetValue()==1)
				{
					player.StatBase[ST_KARMA]+=400;
				}

	// Энкаунтерная карма - хабологи
	GameVar @ cleanHubs = GetLocalVar(LVAR_hell_atonement_enc_hubologists , player.Id);
				//if(!valid(cleanHubs)) continue;
				if(cleanHubs.GetValue()==1)
				{
				GameVar @ cleanedHubs = GetLocalVar(LVAR_enc_loyality_hubologists, player.Id);
					if(valid(cleanedHubs))
					{
						cleanedHubs = 10;
					}
				}

	// Энкаунтерная карма - НКР
	GameVar @ cleanNCR = GetLocalVar(LVAR_hell_atonement_enc_ncr , player.Id);
				//if(!valid(cleanNCR)) continue;
				if(cleanNCR.GetValue()==1)
				{
					GameVar @ cleanedNCR = GetLocalVar(LVAR_enc_loyality_ncr, player.Id);
						if(valid(cleanedNCR))
						{
							cleanedNCR = 7;
						}
				}
	
	// Энкаунтерная карма - ГУ
	GameVar @ cleanVC = GetLocalVar(LVAR_hell_atonement_enc_vcity , player.Id);
				//if(!valid(cleanVC)) continue;
				if(cleanVC.GetValue()==1)
				{
					GameVar @ cleanedVC = GetLocalVar(LVAR_enc_loyality_vcity, player.Id);
						if(valid(cleanedVC))
						{
							cleanedVC = 7;
						}
				}

	// Энкаунтерная карма - Реддинг
	GameVar @ cleanRedding = GetLocalVar(LVAR_hell_atonement_enc_redding , player.Id);
				//if(!valid(cleanRedding)) continue;
				if(cleanRedding.GetValue()==1)
				{
					GameVar @ cleanedRedding = GetLocalVar(LVAR_enc_loyality_redding, player.Id);
						if(valid(cleanedRedding))
						{
							cleanedRedding = 7;
						}
				}

	// Энкаунтерная карма - БХ
	GameVar @ cleanBHills = GetLocalVar(LVAR_hell_atonement_enc_bh , player.Id);
				//if(!valid(cleanBHills)) continue;
				if(cleanBHills.GetValue()==1)
				{
					GameVar @ cleanedBennyHills = GetLocalVar(LVAR_enc_loyality_broken, player.Id);
						if(valid(cleanedBennyHills))
						{
							cleanedBennyHills = 7;
						}
				}

	// Энкаунтерная карма - Гекко
	GameVar @ cleanGecko = GetLocalVar(LVAR_hell_atonement_enc_gecko , player.Id);
				//if(!valid(cleanGecko)) continue;
				if(cleanGecko.GetValue()==1)
				{
					GameVar @ cleanedGecko = GetLocalVar(LVAR_enc_loyality_gecko, player.Id);
						if(valid(cleanedGecko))
						{
							cleanedGecko = 7;
						}
				}
				
	//Тут по-порядку должен идти Арройо, но их карму не очищают. Имейте ввиду.

	// Энкаунтерная карма - Кламат
	GameVar @ cleanKlamath = GetLocalVar(LVAR_hell_atonement_enc_klamath , player.Id);
				//if(!valid(cleanKlamath)) continue;
				if(cleanKlamath.GetValue()==1)
				{
					GameVar @ cleanedKlamath = GetLocalVar(LVAR_enc_loyality_klamath, player.Id);
						if(valid(cleanedKlamath))
						{
							cleanedKlamath = 0;
						}
				}

	// Энкаунтерная карма - Модок.
	GameVar @ cleanModoc = GetLocalVar(LVAR_hell_atonement_enc_modoc , player.Id);
				//if(!valid(cleanModoc)) continue;
				if(cleanModoc.GetValue()==1)
				{
					GameVar @ cleanedModoc = GetLocalVar(LVAR_enc_loyality_modoc, player.Id);
						if(valid(cleanedModoc))
						{
							cleanedModoc = 4;
						}
				}

	// Энкаунтерная карма - Дэн
	GameVar @ cleanDen = GetLocalVar(LVAR_hell_atonement_enc_den , player.Id);
				//if(!valid(cleanDen)) continue;
				if(cleanDen.GetValue()==1)
				{
					GameVar @ cleanedDen = GetLocalVar(LVAR_enc_loyality_den, player.Id);
						if(valid(cleanedDen))
						{
							cleanedDen = 10;
						}
				}

	// Энкаунтерная карма - Рено
	GameVar @ cleanReno = GetLocalVar(LVAR_hell_atonement_enc_reno , player.Id);
				//if(valid(cleanReno)) continue;
				if(cleanReno.GetValue()==1)
				{
					GameVar @ cleanedReno = GetLocalVar(LVAR_enc_loyality_reno, player.Id);
						if(valid(cleanedReno))
						{
							cleanedReno = 7;
						}
				}

	// Энкаунтерная карма - СФ
	GameVar @ cleanSF = GetLocalVar(LVAR_hell_atonement_enc_sf_caravans , player.Id);
				//if(!valid(cleanSF)) continue;
				if(cleanSF.GetValue()==1)
				{
					GameVar @ cleanedSF = GetLocalVar(LVAR_enc_loyality_sf, player.Id);
						if(valid(cleanedSF))
						{
							cleanedSF = 7;
						}
				}
				
	// Делаем отметку, что игрок очистился, чтобы его больше не реплицировало в Аду.
	GameVar @ playerIsInHell = GetLocalVar(LVAR_player_is_in_hell, player.Id);
				if(valid(playerIsInHell))
				{
					playerIsInHell = 0;
				}
}