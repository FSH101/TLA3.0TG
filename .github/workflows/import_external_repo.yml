name: Import files from another GitHub repo (copy, no history)

on:
  workflow_dispatch:
    inputs:
      # — откуда тянуть —
      source_repo:
        description: "owner/name исходного репозитория"
        required: true
        default: "SacredCracker/FOnline-TlaMk2"
      source_ref:
        description: "Ветка/тег/коммит исходника"
        required: true
        default: "2012-old-version"
      # Можно указать одну или несколько строк для sparse-checkout (ускоряет):
      # Примеры:
      #   Server/**
      #   Server/maps/**
      #   Server/proto/**
      sparse_paths:
        description: "Строки sparse-checkout (оставь пустым, чтобы взять всё)"
        required: false
        default: |

      # — куда складывать у тебя —
      dest_path:
        description: "Папка в этом репо, куда положить файлы"
        required: true
        default: "external/FOnline-TlaMk2"

      # — в какую ветку коммитить —
      target_branch:
        description: "Ветка в этом репо для коммита"
        required: true
        default: "import-fonline"

      commit_message:
        description: "Текст коммита"
        required: true
        default: "Import from external repo"

      # Если исходник приватный — положи PAT в секрет SOURCE_REPO_TOKEN и включи true
      use_private_token:
        description: "Использовать secrets.SOURCE_REPO_TOKEN для приватного репо (true/false)"
        required: false
        default: "false"

jobs:
  import:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 0) Чекаут твоего репо (легковесно) и переключение/создание целевой ветки
      - name: Checkout this repo (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.target_branch }}

      - name: Create branch if not exists
        shell: bash
        run: |
          set -e
          BR="${{ github.event.inputs.target_branch }}"
          if ! git rev-parse --verify --quiet "origin/$BR"; then
            git checkout -b "$BR"
          else
            git checkout "$BR"
            git pull --ff-only
          fi

      # 1) Чекаут исходного репо в _src (шallow + sparse, чтобы не тянуть лишнее)
      - name: Checkout source repo (sparse if paths provided)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.source_repo }}
          ref: ${{ github.event.inputs.source_ref }}
          path: _src
          fetch-depth: 1
          fetch-tags: false
          # Если исходник приватный:
          token: ${{ github.event.inputs.use_private_token == 'true' && secrets.SOURCE_REPO_TOKEN || '' }}
          # Sparse-checkout, если указаны пути
          sparse-checkout: ${{ github.event.inputs.sparse_paths }}
          sparse-checkout-cone: false

      # 2) Копируем файлы к тебе
      - name: Copy files into destination
        shell: bash
        run: |
          set -e
          DEST="${{ github.event.inputs.dest_path }}"
          mkdir -p "$DEST"
          rsync -a --delete --exclude ".git/" "_src/" "$DEST/"

          echo "Imported into: $DEST"
          # Без pipefail/pipe — чтобы не падало из-за Broken pipe
          find "$DEST" -mindepth 1 -maxdepth 5 -print > .import_list.txt || true
          head -n 100 .import_list.txt || true

      # 3) Коммит и пуш
      - name: Commit & push
        shell: bash
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -A
          git commit -m "${{ github.event.inputs.commit_message }}" || echo "No changes"
          git push --set-upstream origin "${{ github.event.inputs.target_branch }}"
