jobs:
  import:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 1) Чекаутим ТВОЁ репо и переключаемся на целевую ветку (ТОЛЬКО 1 КОММИТ)
      - name: Checkout this repo (shallow, single branch)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}  # только целевая ветка
          fetch-depth: 1                                  # только верхний коммит
          fetch-tags: false                               # без тегов
          filter: blob:none                               # без blob-данных (ускоряет, git 2.41+ на раннерах ок)
          # submodules: false                            # по умолчанию false

      # (опционально) если надо гарантированно развязать "blob:none" перед записью файлов:
      - name: Ensure blobs for working tree (optional)
        run: |
          git config --local remote.origin.promisor false || true
          git config --local core.sparseCheckout false || true

      # 2) Чекаутим ИСТОЧНИК в подпапку _src (ТОЛЬКО НУЖНАЯ ВЕТКА/ПУТИ)
      - name: Checkout source repo (shallow, filtered)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.source_repo }}
          ref: ${{ github.event.inputs.source_ref }}
          path: _src
          fetch-depth: 1
          fetch-tags: false
          filter: blob:none
          # Если нужен только один каталог/глоб из исходника — включи sparse-checkout:
          # sparse-checkout: |
          #   ${{ github.event.inputs.source_path }}
          #   # можно несколько строк
          # token: ${{ secrets.SOURCE_REPO_TOKEN }}  # если приватный исходник

      # 3) Копируем нужные файлы
      - name: Copy files
        shell: bash
        run: |
          set -e
          DEST="${{ github.event.inputs.dest_path }}"
          SRCSEL="${{ github.event.inputs.source_path }}"
          mkdir -p "$DEST"

          if [ -z "$SRCSEL" ]; then
            rsync -a --delete --exclude ".git/" "_src/" "$DEST/"
          else
            shopt -s globstar nullglob
            if [ -d "_src/$SRCSEL" ]; then
              rsync -a --delete "_src/$SRCSEL/" "$DEST/"
            else
              mkdir -p "$DEST"
              for f in _src/$SRCSEL; do
                [ -e "$f" ] || continue
                if [ -d "$f" ]; then
                  rsync -a "$f/" "$DEST/$(basename "$f")/"
                else
                  mkdir -p "$DEST/$(dirname "${f#_src/}")"
                  cp -a "$f" "$DEST/$(dirname "${f#_src/}")/"
                fi
              done
            fi
          fi

          echo "Imported into: $DEST"
          # избегаем Broken pipe
          find "$DEST" -mindepth 1 -maxdepth 5 -print > .import_list.txt || true
          head -n 100 .import_list.txt || true

      # 4) Коммитим изменения
      - name: Commit & push
        shell: bash
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add -A
          git commit -m "${{ github.event.inputs.commit_message }}" || echo "No changes"
          git push
